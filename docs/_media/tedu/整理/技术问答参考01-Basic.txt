1.Linux与windows系统的区别？
Linux 是一个开源的操作系统 是一个类似Unix的操作系统
Linux 是主流的服务器操作系统，广泛应用于互联网、云计算、智能手机等领域

2.名词解释 JVM JRE JDK
JVM:java虚拟机
	        加载.class并运行.class
JRE:java运行环境
	        除了包含JVM以外还包含了运行java程序所必须的环境
			JRE=JVM+java系统类库(小零件)
JDK:java开发工具包
	        除了包含JRE以外还包含了开发java程序所必须的命令工具
			JDK=JRE+编译、运行等命令工具		
			
3.注释有几种？分别是什么
/** */文档注释
/* */文本注释
//行内注释

4.变量的命名规则
1. 只能包含字母、数字、_和$符，并且不能以数字开头
2.严格区分大小写
3.不能使用关键字
4.可以中文命名，但不建议
5  建议:"英文的见名知意"、"驼峰命名法"

5.写出八种基本类型、其中文含义、所占字节数
byte            整数类型           1字节
short           整数类型			2字节
int		    整数类型 			4字节
long			长整型				8字节
float			单精度浮点型  	4字节
double 		双精度浮点型	8字节
char			字符型				2字节
boolean		布尔型				1字节

6.Scanner的用法

①.在package下:
import  java .util .Scanner;

②.在main方法中:
Scanner sacn = new Scanner(System.in);

③.在第2步之下:
System.out.println("请输入");
String str = scan.nextLine();

7.写出java中的算术运算符、关系运算符、赋值运算符、字符串连接运算符、逻辑运算符、三目运算符，并做出解释
算术运算符解释
+			加法运算
-			减法云散
*			乘法运算
/			除法运算
++		原本的数+1
--			原本的数-1
%			取余数
关系运算符解释
>			大于
<			小于
>=		大于并且等于
<=		小于并且等于
==		等于
!=			不等于
逻辑运算符
& 		与
&&		短路与
|			或
||			短路或
!			非/不
赋值运算符解释
=			赋值
+=		相加并赋值
-=		相减并赋值
*=		相乘并赋值
/=		相除并赋值
%=		取余并赋值

字符串连接运算符解释
+			字符串拼接
三目运算符解释
条件/三目：boolean？数1：数2；
判断条件为（true/false）为true走数1：为false走数2；

8.分支结构有哪几种？
  1.if 结构:1条路
  2.if...else 结构:2条路
  3.if...else if 结构:多条路
  4.switch...case 结构:多条路
  优点:效率高、结构清晰
  缺点:整数、相等

9.循环的三要素分别是什么？
  1.循环变量的初始化
  2.循环的条件(以循环变量为基础)
  3.循环变量的改变(向着循环的结束变)
    循环变量:   在整个循环过程中所反复改变的那个数
    要素1与要素3相同时，首选do...while

10.循环结构有哪几种，分别说明其特点？
1 while（）{}  不固定次数      先判断后执行，有可能一次都不执行  要素1与要素3不同时，首选while
2 do{}while（）:不固定次数   先执行后判断，至少执行一次 要素1与要素3相同时，首选do...while
3. for（；；）{}：应用率最高，固定次数循环

11.break和continue关键字在循环结构中的作用
.break:跳出循环
continue:跳过循环体中剩余语句而进入下一次循环

12.举例说明初始化数组的方式
	  int[] arr = new int[3];    声明同时初始化
	  int[] arr = {1,4,7}; 			声明后直接赋值
	  int[] arr = new int[]{1,4,7};		声明同时初始化并赋值
	  int[] arr;							先声明后初始化并赋值
	  arr = new int[]{1,4,7}; 
	  
13.写出九九乘法表代码
public static void main(String[] args) {
		//小99三角梯形
		int b=1;
		for(int i=1;i<=9;i++){
			for(int a=1;a<=i;a++){
				b=i*a;//小99格式
				System.out.print(a+"*"+i+"="+b+"\t");//\t分割符&tab近似又叫转义符向后空出3个空格
			}System.out.println();//换行作用
		}
	}


14.写出冒泡算法代码
public static void main(String[] args){
int[] arr ={52,533,4865,21535,554,351,};
for(int i=0;i<arr.length-1;i++){
	for(int j = 0 ;j<arr.length-1-i;j++){
		if(arr[j]>arr[j+1]){
		int num = arr[j];
		arr[j] = arr[j+1];
		arr[j+1] =num;
		}
	}
}
System.out.println(Arrays.toString(arr))
}
n个数冒四轮
		每一轮都是从第1个元素开始冒
		      每一次都是和它的下一个元素比
			冒出来的就不带它玩了
			
	不同的数据用不同的排序算法，优劣也是不同的
    这30万个数据-----------------插入排序最快
	另30万个数据-----------------冒泡排序最快
	另30万个数据-----------------快速排序最快
有一种排序方式一直是最最快的
    Arrays.sort(arr);

	
15.方法的作用？
  1 封装一段特定的业务逻辑功能
  2 方法尽可能的独立，只干一件事
  3 方法可以被反复多次的调用
  4 减少代码重复，有利于代码的维护，有利于团队的协作开发
